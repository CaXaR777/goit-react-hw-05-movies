{"version":3,"file":"static/js/509.fe04f55b.chunk.js","mappings":"+SAwCAA,EAAAA,EAAAA,SAAAA,QAHgB,+BAKhB,IAAMC,EAAgB,IAAIC,gBAC1BD,EAAcE,OAAO,UALN,oCAOR,IAAMC,EAAW,mCAAG,WAAMC,GAAN,kFACnBC,EAAS,IAAIJ,gBAAgBD,IAC5BE,OAAO,QAASE,GAFE,SAIFL,EAAAA,EAAAA,IAAA,gBAA2B,CAAEM,OAAAA,IAJ3B,uBAIjBC,EAJiB,EAIjBA,KAJiB,kBAKlBA,EAAKC,SALa,2CAAH,sDAQXC,EAAY,mCAAG,sGACHT,EAAAA,EAAAA,IAAA,8BAAiCC,EAAcS,aAD5C,uBAClBH,EADkB,EAClBA,KADkB,kBAEnBA,EAAKC,SAFc,2CAAH,qDAKZG,EAAiB,mCAAG,WAAMC,GAAN,yFACRZ,EAAAA,EAAAA,IAAA,iBAAoBY,EAApB,YAA+BX,EAAcS,aADrC,uBACvBH,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAKjBM,EAAc,mCAAG,WAAMD,GAAN,yFACLZ,EAAAA,EAAAA,IAAA,iBAAoBY,EAApB,oBAAuCX,EAAcS,aADhD,uBACpBH,EADoB,EACpBA,KADoB,kBAErBA,EAAKO,MAFgB,2CAAH,sDAKdC,EAAiB,mCAAG,WAAMH,GAAN,yFACRZ,EAAAA,EAAAA,IAAA,iBAAoBY,EAApB,oBAAuCX,EAAcS,aAD7C,uBACvBH,EADuB,EACvBA,KADuB,kBAExBA,EAAKC,SAFmB,2CAAH,qD,oKClEjBQ,EAAOC,EAAAA,GAAAA,IAAH,kHAOJC,EAAWD,EAAAA,GAAAA,GAAH,uHAQRE,EAAWF,EAAAA,GAAAA,GAAH,qFAMRG,EAAYH,EAAAA,GAAAA,GAAH,6GAOTI,EAAWJ,EAAAA,GAAAA,IAAH,gIAQRK,EAAYL,EAAAA,GAAAA,GAAH,4C,SCYtB,EA5Ca,WACX,IAAQL,GAAYW,EAAAA,EAAAA,MAAZX,QACR,GAAwBY,EAAAA,EAAAA,UAAS,IAAjC,eAAOV,EAAP,KAAaW,EAAb,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAESd,EAAAA,EAAAA,IAAeD,GAFxB,OAERgB,EAFQ,OAGdH,EAAQG,GAHM,gDAKdC,QAAQC,IAAR,MALc,yDAAH,qDASfH,GACD,GAAE,CAACf,KAGF,UAAC,EAAD,YACE,SAAC,EAAD,UAAa,UACb,SAAC,EAAD,UACGE,EAAKiB,KAAI,SAAAC,GAAK,OACb,UAAC,EAAD,YACE,yBACGA,EAAMC,eACL,SAAC,EAAD,CACEC,IAAG,yCAAoCF,EAAMC,cAC7CE,IAAG,UAAKH,EAAMI,KAAX,mBAIT,SAAC,EAAD,UAAcJ,EAAMI,SATLJ,EAAMK,GADV,QAgBtB,C","sources":["api/api.js/api.js","components/Cast/cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["// import axios from 'axios';\n// // import PropTypes from 'prop-types';\n\n// axios.defaults.baseURL = 'https://api.themoviedb.org/3';\n// axios.defaults.params = {\n//   api_key: '26a67413674973264e8a8b350ec08dc8',\n// };\n\n// export const fetchMovies = async query => {\n//   const params = {\n//     query,\n//   };\n//   const { data } = await axios.get(`/search/movie`, { params });\n//   return data.results;\n// };\n\n// export const fetchPopular = async () => {\n//   const { data } = await axios.get(`/trending/movie/day`);\n//   return data.results;\n// };\n\n// export const fetchMovieDetails = async movieId => {\n//   const { data } = await axios.get(`/movie/${movieId}`);\n//   return data;\n// };\n\n// export const fetchCastMovie = async movieId => {\n//   const { data } = await axios.get(`/movie/${movieId}/credits`);\n//   return data.cast;\n// };\n\n// export const fetchMovieReviews = async movieId => {\n//   const { data } = await axios.get(`/movie/${movieId}/reviews`);\n//   return data.results;\n// };\nimport axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org/3';\nconst apiKey = '26a67413674973264e8a8b350ec08dc8';\n\naxios.defaults.baseURL = baseURL;\n\nconst defaultParams = new URLSearchParams();\ndefaultParams.append('api_key', apiKey);\n\nexport const fetchMovies = async query => {\n  const params = new URLSearchParams(defaultParams);\n  params.append('query', query);\n\n  const { data } = await axios.get(`/search/movie`, { params });\n  return data.results;\n};\n\nexport const fetchPopular = async () => {\n  const { data } = await axios.get(`/trending/movie/day?${defaultParams.toString()}`);\n  return data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}?${defaultParams.toString()}`);\n  return data;\n};\n\nexport const fetchCastMovie = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits?${defaultParams.toString()}`);\n  return data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews?${defaultParams.toString()}`);\n  return data.results;\n};","import styled from 'styled-components';\n\nexport const Cast = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 20px;\n`;\n\nexport const CastList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const CastItem = styled.ul`\n  display: flex;\n  align-items: center;\n  margin: 10px 0;\n`;\n\nexport const CastTitle = styled.h2`\n  margin-top: 20px;\n  margin-left: 20px;\n  font-size: 28px;\n  font-weight: bold;\n`;\n\nexport const ActorImg = styled.img`\n  width: 120px;\n  height: 180px;\n  object-fit: cover;\n  border-radius: 10px;\n  margin-right: 20px;\n`;\n\nexport const ActorName = styled.ul`\n  font-size: 20px;\n`;\n\n// export const Return = styled.button`\n//   position: absolute;\n//   top: 70px;\n//   left: 20px;\n// `;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n// import PropTypes from 'prop-types';\nimport { fetchCastMovie } from '../../api/api.js/api';\nimport * as S from './cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const castData = await fetchCastMovie(movieId);\n        setCast(castData);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <S.Cast>\n      <S.CastTitle>Cast</S.CastTitle>\n      <S.CastList>\n        {cast.map(actor => (\n          <S.CastItem key={actor.id}>\n            <div>\n              {actor.profile_path && (\n                <S.ActorImg\n                  src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\n                  alt={`${actor.name}'s profile`}\n                />\n              )}\n            </div>\n            <S.ActorName>{actor.name}</S.ActorName>\n          </S.CastItem>\n        ))}\n      </S.CastList>\n    </S.Cast>\n  );\n};\n\n// Cast.propTypes = {\n//   movieId: PropTypes.number.isRequired,\n//   cast: PropTypes.array.isRequired,\n// };\n\nexport default Cast;\n"],"names":["axios","defaultParams","URLSearchParams","append","fetchMovies","query","params","data","results","fetchPopular","toString","fetchMovieDetails","movieId","fetchCastMovie","cast","fetchMovieReviews","Cast","styled","CastList","CastItem","CastTitle","ActorImg","ActorName","useParams","useState","setCast","useEffect","fetchCast","castData","console","log","map","actor","profile_path","src","alt","name","id"],"sourceRoot":""}