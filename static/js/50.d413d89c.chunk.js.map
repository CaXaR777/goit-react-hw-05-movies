{"version":3,"file":"static/js/50.d413d89c.chunk.js","mappings":"8SAGAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAW,mCAAG,WAAMC,GAAN,kFACnBC,EAAS,CACbD,MAAAA,GAFuB,SAIFH,EAAAA,EAAAA,IAAA,gBAA2B,CAAEI,OAAAA,IAJ3B,uBAIjBC,EAJiB,EAIjBA,KAJiB,kBAKlBA,EAAKC,SALa,2CAAH,sDAQXC,EAAY,mCAAG,sGACHP,EAAAA,EAAAA,IAAA,uBADG,uBAClBK,EADkB,EAClBA,KADkB,kBAEnBA,EAAKC,SAFc,2CAAH,qDAKZE,EAAiB,mCAAG,WAAMC,GAAN,yFACRT,EAAAA,EAAAA,IAAA,iBAAoBS,IADZ,uBACvBJ,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAKjBK,EAAc,mCAAG,WAAMD,GAAN,yFACLT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,aADK,uBACpBJ,EADoB,EACpBA,KADoB,kBAErBA,EAAKM,MAFgB,2CAAH,sDAKdC,EAAiB,mCAAG,WAAMH,GAAN,yFACRT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,aADQ,uBACvBJ,EADuB,EACvBA,KADuB,kBAExBA,EAAKC,SAFmB,2CAAH,qD,6JC7BjBO,EAAOC,EAAAA,GAAAA,GAAH,yFAMJC,EAAQD,EAAAA,GAAAA,GAAH,6G,GAOIA,EAAAA,GAAAA,OAAH,4E,QCgCnB,EAzCgB,WACd,IAAQL,GAAYO,EAAAA,EAAAA,MAAZP,QACR,GAA8BQ,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEKT,EAAAA,EAAAA,IAAkBH,GAFvB,OAEXS,EAFW,OAGjBC,EAAWD,GAHM,gDAKjBI,QAAQC,IAAR,MALiB,yDAAH,qDASlBF,GACD,GAAE,CAACZ,KAGF,4BACE,SAAC,EAAD,UAAS,YACRS,EAAQM,QACP,wBACGN,EAAQO,KAAI,SAAAC,GAAM,OACjB,UAAC,EAAD,YACE,uBAAIA,EAAOC,UACX,uBAAID,EAAOE,YAFAF,EAAOG,GADH,OAQrB,uBAAG,qBAIV,C","sources":["api/api.js/api.js","components/Reviews/reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n// import PropTypes from 'prop-types';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '26a67413674973264e8a8b350ec08dc8',\n};\n\nexport const fetchMovies = async query => {\n  const params = {\n    query,\n  };\n  const { data } = await axios.get(`/search/movie`, { params });\n  return data.results;\n};\n\nexport const fetchPopular = async () => {\n  const { data } = await axios.get(`/trending/movie/day`);\n  return data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}`);\n  return data;\n};\n\nexport const fetchCastMovie = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits`);\n  return data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`);\n  return data.results;\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  font-size: 16px;\n  margin-bottom: 16px;\n  line-height: 1.5;\n`;\n\nexport const Title = styled.h2`\n  margin-top: 60px;\n  margin-left: 20px;\n  font-size: 28px;\n  font-weight: bold;\n`;\n\nexport const Return = styled.button`\n  position: absolute;\n  top: 70px;\n  left: 20px;\n`;\n","import { useState, useEffect } from 'react';\n// import PropTypes from 'prop-types';\nimport { fetchMovieReviews } from '../../api/api.js/api';\nimport { useParams } from 'react-router-dom';\nimport * as S from './reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const reviews = await fetchMovieReviews(movieId);\n        setReviews(reviews);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      <S.Title>Reviews</S.Title>\n      {reviews.length ? (\n        <ul>\n          {reviews.map(review => (\n            <S.Item key={review.id}>\n              <p>{review.author}</p>\n              <p>{review.content}</p>\n            </S.Item>\n          ))}\n        </ul>\n      ) : (\n        <p>No reviews yet</p>\n      )}\n    </div>\n  );\n};\n\n// Reviews.propTypes = {\n//   movieId: PropTypes.number.isRequired,\n//   reviews: PropTypes.array.isRequired,\n// };\n\nexport default Reviews;\n"],"names":["axios","api_key","fetchMovies","query","params","data","results","fetchPopular","fetchMovieDetails","movieId","fetchCastMovie","cast","fetchMovieReviews","Item","styled","Title","useParams","useState","reviews","setReviews","useEffect","fetchReviews","console","log","length","map","review","author","content","id"],"sourceRoot":""}