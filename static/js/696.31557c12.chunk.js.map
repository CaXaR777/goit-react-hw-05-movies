{"version":3,"file":"static/js/696.31557c12.chunk.js","mappings":"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","sources":["api/api.js/api.js","pages/Movies/movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nimport PropTypes from 'prop-types';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '26a67413674973264e8a8b350ec08dc8',\n};\n\nexport const fetchMovies = async query => {\n  const params = {\n    query,\n  };\n  const { data } = await axios.get(`/search/movie`, { params });\n  return data.results;\n};\n\nexport const fetchPopular = async () => {\n  const { data } = await axios.get(`/trending/movie/day`);\n  return data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}`);\n  return data;\n};\n\nexport const fetchCastMovie = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits`);\n  return data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`);\n  return data.results;\n};\n\nfetchMovies.propTypes = {\n  query: PropTypes.string.isRequired,\n};\nfetchPopular.propTypes = {\n  data: PropTypes.object.isRequired,\n};\nfetchMovieDetails.propTypes = {\n  movieId: PropTypes.number.isRequired,\n};\nfetchCastMovie.propTypes = {\n  movieId: PropTypes.number.isRequired,\n};\nfetchMovieReviews.propTypes = {\n  movieId: PropTypes.number.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Movie = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin: 0 20px;\n`;\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin: 0 20px;\n`;\n\nexport const MovieItem = styled.li`\n  margin: 10px 0;\n  font-weight: bold;\n`;\n\nexport const Title = styled.h2`\n  text-decoration: none;\n  color: #0000ff;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nexport const Lable = styled.label`\n  padding: 8px 16px;\n  font-size: 16px;\n  font-weight: bold;\n  border-radius: 0 4px 4px 0;\n  border: none;\n`;\n\nexport const Button = styled.button`\n  margin-left: 10px;\n`;\n","import { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n// import PropTypes from 'prop-types';\nimport { fetchMovies } from '../../api/api.js/api';\nimport * as S from './movies.styled';\n\nconst Movies = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const movies = await fetchMovies(searchParams.get('textQuery'));\n        setSearchResults(movies);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, [searchParams]);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (searchTerm) {\n      setSearchParams({ textQuery: searchTerm });\n      setSearchTerm('');\n    } else {\n      setSearchResults([]);\n      setSearchParams({});\n    }\n  };\n\n//   console.log(location);\n\n  return (\n    <S.Movie>\n      <S.Title>Movies</S.Title>\n      <form onSubmit={handleSubmit}>\n        <S.Lable htmlFor=\"search\">Search for movies:</S.Lable>\n        <input\n          type=\"text\"\n          id=\"search\"\n          value={searchTerm}\n          onChange={handleChange}\n        />\n        <S.Button type=\"submit\">Search</S.Button>\n      </form>\n      <S.MovieList>\n        {searchResults.map(movie => (\n          <S.MovieItem key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </S.MovieItem>\n        ))}\n      </S.MovieList>\n    </S.Movie>\n  );\n};\n\n\nexport default Movies;\n"],"names":["axios","api_key","fetchMovies","query","params","data","results","fetchPopular","fetchMovieDetails","movieId","fetchCastMovie","cast","fetchMovieReviews","propTypes","PropTypes","Movie","styled","MovieList","MovieItem","Title","Lable","Button","useState","searchTerm","setSearchTerm","searchResults","setSearchResults","useSearchParams","searchParams","setSearchParams","location","useLocation","useEffect","fetchData","get","movies","console","log","handleSubmit","event","preventDefault","textQuery","onSubmit","htmlFor","type","id","value","onChange","target","map","movie","to","state","from","title"],"sourceRoot":""}