{"version":3,"file":"static/js/509.3e7c732b.chunk.js","mappings":"+TAGAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAW,mCAAG,WAAMC,GAAN,kFACnBC,EAAS,CACbD,MAAAA,GAFuB,SAIFH,EAAAA,EAAAA,IAAA,gBAA2B,CAAEI,OAAAA,IAJ3B,uBAIjBC,EAJiB,EAIjBA,KAJiB,kBAKlBA,EAAKC,SALa,2CAAH,sDAQXC,EAAY,mCAAG,sGACHP,EAAAA,EAAAA,IAAA,uBADG,uBAClBK,EADkB,EAClBA,KADkB,kBAEnBA,EAAKC,SAFc,2CAAH,qDAKZE,EAAiB,mCAAG,WAAMC,GAAN,yFACRT,EAAAA,EAAAA,IAAA,iBAAoBS,IADZ,uBACvBJ,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAKjBK,EAAc,mCAAG,WAAMD,GAAN,yFACLT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,aADK,uBACpBJ,EADoB,EACpBA,KADoB,kBAErBA,EAAKM,MAFgB,2CAAH,sDAKdC,EAAiB,mCAAG,WAAMH,GAAN,yFACRT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,aADQ,uBACvBJ,EADuB,EACvBA,KADuB,kBAExBA,EAAKC,SAFmB,2CAAH,sDAK9BJ,EAAYW,UAAY,CACtBV,MAAOW,IAAAA,OAAAA,YAETP,EAAaM,UAAY,CACvBR,KAAMS,IAAAA,OAAAA,YAERN,EAAkBK,UAAY,CAC5BJ,QAASK,IAAAA,OAAAA,YAEXJ,EAAeG,UAAY,CACzBJ,QAASK,IAAAA,OAAAA,YAEXF,EAAkBC,UAAY,CAC5BJ,QAASK,IAAAA,OAAAA,W,oKC/CEC,EAAOC,EAAAA,GAAAA,IAAH,kHAOJC,EAAWD,EAAAA,GAAAA,GAAH,uHAQRE,EAAWF,EAAAA,GAAAA,GAAH,qFAMRG,EAAYH,EAAAA,GAAAA,GAAH,6GAOTI,EAAWJ,EAAAA,GAAAA,IAAH,gIAQRK,EAAYL,EAAAA,GAAAA,GAAH,4C,SCYtB,EA5Ca,WACX,IAAQP,GAAYa,EAAAA,EAAAA,MAAZb,QACR,GAAwBc,EAAAA,EAAAA,UAAS,IAAjC,eAAOZ,EAAP,KAAaa,EAAb,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEShB,EAAAA,EAAAA,IAAeD,GAFxB,OAERkB,EAFQ,OAGdH,EAAQG,GAHM,gDAKdC,QAAQC,IAAR,MALc,yDAAH,qDASfH,GACD,GAAE,CAACjB,KAGF,UAAC,EAAD,YACE,SAAC,EAAD,UAAa,UACb,SAAC,EAAD,UACGE,EAAKmB,KAAI,SAAAC,GAAK,OACb,UAAC,EAAD,YACE,yBACGA,EAAMC,eACL,SAAC,EAAD,CACEC,IAAG,yCAAoCF,EAAMC,cAC7CE,IAAG,UAAKH,EAAMI,KAAX,mBAIT,SAAC,EAAD,UAAcJ,EAAMI,SATLJ,EAAMK,GADV,QAgBtB,C","sources":["api/api.js/api.js","components/Cast/cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\nimport PropTypes from 'prop-types';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '26a67413674973264e8a8b350ec08dc8',\n};\n\nexport const fetchMovies = async query => {\n  const params = {\n    query,\n  };\n  const { data } = await axios.get(`/search/movie`, { params });\n  return data.results;\n};\n\nexport const fetchPopular = async () => {\n  const { data } = await axios.get(`/trending/movie/day`);\n  return data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}`);\n  return data;\n};\n\nexport const fetchCastMovie = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits`);\n  return data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`);\n  return data.results;\n};\n\nfetchMovies.propTypes = {\n  query: PropTypes.string.isRequired,\n};\nfetchPopular.propTypes = {\n  data: PropTypes.object.isRequired,\n};\nfetchMovieDetails.propTypes = {\n  movieId: PropTypes.number.isRequired,\n};\nfetchCastMovie.propTypes = {\n  movieId: PropTypes.number.isRequired,\n};\nfetchMovieReviews.propTypes = {\n  movieId: PropTypes.number.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Cast = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 20px;\n`;\n\nexport const CastList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const CastItem = styled.ul`\n  display: flex;\n  align-items: center;\n  margin: 10px 0;\n`;\n\nexport const CastTitle = styled.h2`\n  margin-top: 20px;\n  margin-left: 20px;\n  font-size: 28px;\n  font-weight: bold;\n`;\n\nexport const ActorImg = styled.img`\n  width: 120px;\n  height: 180px;\n  object-fit: cover;\n  border-radius: 10px;\n  margin-right: 20px;\n`;\n\nexport const ActorName = styled.ul`\n  font-size: 20px;\n`;\n\n// export const Return = styled.button`\n//   position: absolute;\n//   top: 70px;\n//   left: 20px;\n// `;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n// import PropTypes from 'prop-types';\nimport { fetchCastMovie } from '../../api/api.js/api';\nimport * as S from './cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const castData = await fetchCastMovie(movieId);\n        setCast(castData);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <S.Cast>\n      <S.CastTitle>Cast</S.CastTitle>\n      <S.CastList>\n        {cast.map(actor => (\n          <S.CastItem key={actor.id}>\n            <div>\n              {actor.profile_path && (\n                <S.ActorImg\n                  src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\n                  alt={`${actor.name}'s profile`}\n                />\n              )}\n            </div>\n            <S.ActorName>{actor.name}</S.ActorName>\n          </S.CastItem>\n        ))}\n      </S.CastList>\n    </S.Cast>\n  );\n};\n\n// Cast.propTypes = {\n//   movieId: PropTypes.number.isRequired,\n//   cast: PropTypes.array.isRequired,\n// };\n\nexport default Cast;\n"],"names":["axios","api_key","fetchMovies","query","params","data","results","fetchPopular","fetchMovieDetails","movieId","fetchCastMovie","cast","fetchMovieReviews","propTypes","PropTypes","Cast","styled","CastList","CastItem","CastTitle","ActorImg","ActorName","useParams","useState","setCast","useEffect","fetchCast","castData","console","log","map","actor","profile_path","src","alt","name","id"],"sourceRoot":""}